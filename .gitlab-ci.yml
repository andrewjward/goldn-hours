stages:
  - test
  - build
  - deploy

# Run flake8 to check for code quality
backend-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 Goldn_Hours_Service
    - cd Goldn_Hours_Service
    - pip install -r requirements.txt
    - python -m pytest

build-front-end-job:
  stage: build
  image: node:lts-bullseye
  script:
    - cd ghi
    - npm install
    - npm run build

  variables:
      # If either of these variables is defined in the GitLab
      # CI/CD variables, that value will override the value here.
      # You need to substitute in your real values for
      # GROUP_NAME, PROJECT_NAME, & WEBSERVICE_NAME below.
      PUBLIC_URL: https://SQUAD_CORE.gitlab.io/GOLDN_HOURS/
      REACT_APP_GOLDN_HOURS_API_HOST: https://sample-service.GOLDN_HOURS.mod3projects.com
    script:
      - cd ghi
      - npm install
      - npm run build
      - cp build/index.html build/404.html
    artifacts:
      paths:
        - ghi/build/


  deploy-user-image:
    stage: deploy
    image: registry.gitlab.com/galvanize-inc/foss/glv-cloud-cli:latest
    script:
      - glv-cloud-cli reset -a ${USER_API} -t ${CIRRUS_TOKEN}
    only:
      - main

  # Build Sample Service:
  build-back-end-job:
    image: docker:20-dind
    stage: build
  services:
    - docker:dind
  before_script:
    - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER # built-in GitLab Registry User
    - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD # built-in GitLab Registry Password
    - export DOCKER_REGISTRY_URL=$CI_REGISTRY # built-in GitLab Registry URL
    - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE # Your repository prefixed with GitLab Registry URL
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry
  script:
    - cd Goldn_Hours_Service
    - echo "Building... " # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/sample_service_image:$COMMIT_HASH
    - docker build -f ./Dockerfile --pull -t built-Goldn_Hours_Service.
    - docker tag built-Goldn_Hours_Service "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run caprover/cli-caprover caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
  only:
    - main
